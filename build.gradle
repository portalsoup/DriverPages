apply plugin: 'java'


sourceCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.projectlombok:lombok:1.16.6'
    compile 'org.seleniumhq.selenium:selenium-java:2.47.1'
    compile "com.github.detro.ghostdriver:phantomjsdriver:1.1.0"
    compile 'org.testng:testng:6.9.6'
    compile 'org.hamcrest:hamcrest-all:1.3'
    compile 'org.mockito:mockito-core:1.10.19'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.2.7.RELEASE'
    compile 'org.hibernate:hibernate-core:4.3.11.Final'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'org.javassist:javassist:3.20.0-GA'
    compile 'mysql:mysql-connector-java:5.1.37'
    compile 'commons-dbcp:commons-dbcp:1.4'
}

test {
    useTestNG()

//     systemProperty 'some.prop', 'value'
//
//     explicitly include or exclude tests
//    include 'org/foo/**'
//    exclude 'org/boo/**'

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    // set heap size for the test JVM(s)
    minHeapSize = "128m"
    maxHeapSize = "512m"

    // set JVM arguments for the test JVM(s)
    jvmArgs '-XX:MaxPermSize=256m'

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }
}